
import streamlit as st
import pandas as pd
from PIL import Image

# Load logo
logo = Image.open("logo.png")
st.image(logo, width=250)

st.markdown("## üìä ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤")

# Upload Excel
uploaded_file = st.file_uploader("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel", type=["xlsx"])
if uploaded_file:
    df = pd.read_excel(uploaded_file, engine="openpyxl")
    
    # Drop rows with missing project or unit
    df = df.dropna(subset=["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", "‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"])
    
    # Unique project list
    project_list = ["ALL PROJECTS"] + sorted(df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"].unique())
    selected_project = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", project_list)
    
    if selected_project != "ALL PROJECTS":
        df = df[df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] == selected_project]
    
    unit_list = df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].astype(str).unique().tolist()
    selected_unit = st.selectbox("üîç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï (Room No.) ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå", [""] + unit_list)
    
    if selected_unit:
        unit = df[df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].astype(str) == selected_unit]
        if not unit.empty:
            asking_price = float(unit["Asking Price"].values[0])
            bottom_price = float(unit["Bottom Price"].values[0])
            cost = float(unit["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°"].values[0])
            area = float(unit["‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‡∏ï‡∏£.‡∏ß."].values[0])
            common_fee = float(unit["‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á"].values[0])

            # Agent Fee: 27% + ‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á √ó ‡∏û‡∏ó √ó 24
            agent_fee = (asking_price * 0.27) + (area * 24 * common_fee)
            agent_price = asking_price - agent_fee

            gp_raw = (bottom_price - cost) / bottom_price
            gp_committed = (agent_price - cost) / agent_price
            gp_diff = gp_raw - gp_committed

            st.markdown(f"### üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ô‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏π‡∏ô‡∏¥‡∏ï {selected_unit}")
            st.code(f"{bottom_price:,.2f}")

            with st.container():
                st.markdown(f"**‡∏¢‡∏π‡∏ô‡∏¥‡∏ï:** {selected_unit}")
                st.markdown(f"**Asking Price:** {asking_price:,.2f} ‡∏ö‡∏≤‡∏ó")
                st.markdown(f"**Bottom Price:** {bottom_price:,.2f} ‡∏ö‡∏≤‡∏ó")
                st.markdown(f"**‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ô‡∏≠:** {bottom_price:,.2f} ‡∏ö‡∏≤‡∏ó")
                st.markdown(f"**GP (‡∏£‡∏≤‡∏¢‡πÅ‡∏õ‡∏•‡∏á):** {gp_raw:.2%}")
                st.markdown(f"‚ú® **GP (Committed ‡πÅ‡∏õ‡∏•‡∏á‡∏ô‡∏µ‡πâ):** {gp_committed:.2%}")
                st.markdown(f"üìç **‡∏ú‡∏•‡∏ï‡πà‡∏≤‡∏á GP:** {'+' if gp_diff >= 0 else ''}{gp_diff:.2%}")
        
        else:
            st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ô‡∏µ‡πâ")
else:
    st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
