
import streamlit as st
import pandas as pd

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
df = pd.read_excel("Corporate_Project_Template.xlsx")

st.set_page_config(page_title="Project GP Summary", layout="wide")
st.title("üìä Project GP Summary Dashboard")

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
projects = df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"].unique()
selected_project = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", projects)

# ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
project_df = df[df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] == selected_project].copy()

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
available_rooms = project_df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].astype(str).tolist()
selected_rooms = st.multiselect("üîé ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï (Room No.) ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå", available_rooms)

# ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
unit_df = project_df[project_df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].astype(str).isin(selected_rooms)].copy()

if unit_df.empty:
    st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
else:
    # ‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ô‡∏≠ (‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)
    st.markdown("### üí∞ ‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏ô‡∏≠ (‡∏ï‡πà‡∏≠‡∏¢‡∏π‡∏ô‡∏¥‡∏ï)")
    suggested_prices = []
    for i, row in unit_df.iterrows():
        price = st.number_input(
            label=f"‡∏´‡πâ‡∏≠‡∏á {row['‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á']} ({row['‡πÅ‡∏ö‡∏ö‡∏ö‡πâ‡∏≤‡∏ô']}) - Bottom Price: {row['Bottom Price']:,.2f} THB",
            min_value=0.0,
            value=float(row["Project Value"]),
            key=f"suggested_{i}"
        )
        suggested_prices.append(price)

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
    unit_df["Proposed Price"] = suggested_prices

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì GP
    unit_df["GP_Actual"] = (unit_df["Proposed Price"] - unit_df["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°"]) / unit_df["Proposed Price"]
    unit_df["GP_Committed"] = (unit_df["Bottom Price"] - unit_df["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°"]) / unit_df["Bottom Price"]
    unit_df["GP_Diff"] = unit_df["GP_Actual"] - unit_df["GP_Committed"]

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏ß‡∏°
    bottom_total = unit_df["Bottom Price"].sum()
    proposed_total = unit_df["Proposed Price"].sum()
    cost_total = unit_df["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°"].sum()

    gp_actual_avg = (proposed_total - cost_total) / proposed_total if proposed_total != 0 else 0
    gp_committed_avg = (bottom_total - cost_total) / bottom_total if bottom_total != 0 else 0
    gp_diff_avg = gp_actual_avg - gp_committed_avg
    price_diff = proposed_total - bottom_total

    st.markdown("### üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
    col1, col2, col3 = st.columns(3)
    with col1:
        st.markdown("**BOTTOM PRICE ‡∏£‡∏ß‡∏°**")
        st.write(f"‡∏ø{bottom_total:,.2f}")
    with col2:
        st.markdown("**‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏£‡∏≤‡∏Ñ‡∏≤**")
        st.write(f"‡∏ø{proposed_total:,.2f}")
    with col3:
        st.markdown("**‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤**")
        st.write(f"‡∏ø{price_diff:,.2f}", unsafe_allow_html=True)

    st.markdown("---")
    st.markdown("### üéØ ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö GP")

    col4, col5, col6 = st.columns(3)
    with col4:
        st.markdown("**GP (Committed)**")
        st.write(f"{gp_committed_avg * 100:.2f}%", unsafe_allow_html=True)
    with col5:
        st.markdown("**GP (‡∏£‡∏≤‡∏¢‡πÅ‡∏õ‡∏•‡∏á)**")
        st.write(f"{gp_actual_avg * 100:.2f}%", unsafe_allow_html=True)
    with col6:
        color = "green" if gp_diff_avg > 0 else "red" if gp_diff_avg < 0 else "black"
        st.markdown(f"**GP Œî**")
        st.markdown(f"<span style='color:{color}; font-size:24px'>{gp_diff_avg * 100:+.2f}%</span>", unsafe_allow_html=True)

    st.markdown("---")
    st.markdown("### üßæ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏¢‡∏π‡∏ô‡∏¥‡∏ï ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    detail_df = unit_df[["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á", "‡πÅ‡∏ö‡∏ö‡∏ö‡πâ‡∏≤‡∏ô", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏õ‡∏•‡∏á", "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°", "Bottom Price", "Proposed Price", "GP_Actual", "GP_Committed", "GP_Diff"]].copy()
    detail_df = detail_df.rename(columns={
        "‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á": "Room",
        "‡πÅ‡∏ö‡∏ö‡∏ö‡πâ‡∏≤‡∏ô": "Type",
        "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏õ‡∏•‡∏á": "Status",
        "‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°": "Cost",
        "Bottom Price": "Bottom Price",
        "Proposed Price": "Proposed Price",
        "GP_Actual": "GP (Actual)",
        "GP_Committed": "GP (Committed)",
        "GP_Diff": "GP Œî"
    })
    st.dataframe(detail_df.style.format({
        "Cost": "‡∏ø{:,.2f}",
        "Bottom Price": "‡∏ø{:,.2f}",
        "Proposed Price": "‡∏ø{:,.2f}",
        "GP (Actual)": "{:.2%}",
        "GP (Committed)": "{:.2%}",
        "GP Œî": "{:+.2%}"
    }), use_container_width=True)
