
import streamlit as st
import pandas as pd
from PIL import Image

st.set_page_config(page_title="SVR GP Dashboard", layout="wide")

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ
st.image("logo.png", width=250)

st.title("üìä ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤")

# ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
@st.cache_data
def load_data():
    return pd.read_excel("Corporate_Project_Template.xlsx", sheet_name="ALL PROJECTS")

df = load_data()

# ‡∏î‡∏£‡∏≠‡∏õ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
project_list = ["ALL PROJECTS"] + sorted(df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"].dropna().unique())
selected_project = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", project_list)

# ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
filtered_df = df.copy()
if selected_project != "ALL PROJECTS":
    filtered_df = df[df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] == selected_project]

# ‡∏î‡∏£‡∏≠‡∏õ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï
unit_list = sorted(filtered_df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].dropna().astype(str).unique())
selected_unit = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï", unit_list)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
unit = filtered_df[filtered_df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].astype(str) == selected_unit]
if not unit.empty:
    u = unit.iloc[0]

    asking_price = float(u["Asking Price"])
    bottom_price = float(u["Bottom Price"])
    cost = float(u["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°"])
    area = float(u["‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‡∏ï‡∏£.‡∏ß."])
    common_fee = float(u["‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á"])

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤ Agent ‡πÅ‡∏•‡∏∞ GP
    agent_fee = (asking_price * 0.27) + (area * 24 * common_fee)
    agent_price = asking_price - agent_fee

    gp_committed = (bottom_price - cost) / bottom_price if bottom_price else 0
    gp_agent = (agent_price - cost) / agent_price if agent_price else 0

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    st.markdown(f"### ‚ú≥Ô∏è ‡∏¢‡∏π‡∏ô‡∏¥‡∏ï: {selected_unit}")
    st.markdown(f"**‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£:** {u['‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£']}")
    st.markdown(f"**‡πÅ‡∏ö‡∏ö‡∏ö‡πâ‡∏≤‡∏ô:** {u['‡πÅ‡∏ö‡∏ö‡∏ö‡πâ‡∏≤‡∏ô']}")
    st.markdown(f"**Asking Price:** {asking_price:,.2f} ‡∏ö‡∏≤‡∏ó")
    st.markdown(f"**Bottom Price:** {bottom_price:,.2f} ‡∏ö‡∏≤‡∏ó")
    st.markdown(f"**‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Agent:** {agent_price:,.2f} ‡∏ö‡∏≤‡∏ó")
    st.markdown(f"**‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°:** {cost:,.2f} ‡∏ö‡∏≤‡∏ó")

    st.markdown("---")
    st.subheader("üíπ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô (GP)")
    st.markdown(f"‚Ä¢ GP (‡∏à‡∏≤‡∏Å Bottom Price): **{gp_committed*100:.2f}%**")
    st.markdown(f"‚Ä¢ GP (‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Agent): **{gp_agent*100:.2f}%**")
else:
    st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
