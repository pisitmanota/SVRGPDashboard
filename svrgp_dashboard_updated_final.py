
import streamlit as st
import pandas as pd

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤
st.set_page_config(page_title="SVR PROJECT GP DASHBOARD", layout="wide")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
@st.cache_data
def load_data():
    df = pd.read_excel("Corporate_Project_Template.xlsx", sheet_name="ALL PROJECTS")
    return df

df = load_data()

# Sidebar
st.sidebar.image("logo.png", width=250)
st.sidebar.subheader("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£")
project_list = ["ALL PROJECTS"] + sorted(df["Project Name"].dropna().unique())
selected_project = st.sidebar.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", project_list)

if selected_project != "ALL PROJECTS":
    df = df[df["Project Name"] == selected_project]

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï
room_options = sorted(df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].dropna().astype(str).unique())
selected_room = st.sidebar.selectbox("üîç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï (Room No.) ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå", [""] + room_options)

check_agent = st.sidebar.checkbox("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö agent")

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
st.header("üìä ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤")

if selected_room:
    unit = df[df["‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á"].astype(str) == selected_room]
    if not unit.empty:
        asking_price = unit["asking price"].values[0]
        bottom_price = unit["bottom price"].values[0]
        cost = unit["‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°"].values[0]
        area = unit["‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà(‡∏ï‡∏£.‡∏ß.)"].values[0]
        common_fee = unit["‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á"].values[0]

        # ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏™‡∏ô‡∏≠ default = bottom price
        default_offer = bottom_price

        # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å agent ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©
        if check_agent:
            agent_fee = asking_price * 0.27
            maintenance_2yr = area * common_fee * 24
            offer_price = asking_price - (agent_fee + maintenance_2yr)
        else:
            offer_price = default_offer

        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì GP ‡∏£‡∏≤‡∏¢‡πÅ‡∏õ‡∏•‡∏á ‡πÅ‡∏•‡∏∞ GP committed ‡∏£‡∏≤‡∏¢‡πÅ‡∏õ‡∏•‡∏á
        gp_unit = round(((offer_price - cost) / offer_price) * 100, 2)
        gp_committed_unit = round(((bottom_price - cost) / bottom_price) * 100, 2)

        gp_committed_project = unit["GP COMMITTED (%)"].values[0]
        gp_diff = round(gp_unit - gp_committed_project, 2)

        st.markdown(f"### ‡∏¢‡∏π‡∏ô‡∏¥‡∏ï: {selected_room}")
        st.markdown(f"**Asking Price:** {asking_price:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.markdown(f"**Bottom Price:** {bottom_price:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.markdown(f"**‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ô‡∏≠:** {offer_price:,.2f} ‡∏ö‡∏≤‡∏ó")
        st.markdown(f"**GP (‡∏£‡∏≤‡∏¢‡πÅ‡∏õ‡∏•‡∏á):** {gp_unit:.2f}%")
        st.markdown(f"‚ú® **GP (Committed ‡πÅ‡∏õ‡∏•‡∏á‡∏ô‡∏µ‡πâ):** {gp_committed_unit:.2f}%")
        st.markdown(f"üéØ **GP (Committed ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£):** {gp_committed_project:.2f}%")
        gp_diff_color = "green" if gp_diff >= 0 else "red"
        st.markdown(f"**‡∏ú‡∏•‡∏ï‡πà‡∏≤‡∏á GP:** <span style='color:{gp_diff_color}'>{gp_diff:+.2f}%</span>", unsafe_allow_html=True)
    else:
        st.info("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
else:
    st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
